// Code generated by mockery 2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	auth "github.com/mikhailbolshakov/cryptocare/src/kit/auth"

	mock "github.com/stretchr/testify/mock"
)

// AuthenticateSession is an autogenerated mock type for the AuthenticateSession type
type AuthenticateSession struct {
	mock.Mock
}

// AuthSession provides a mock function with given fields: ctx, token
func (_m *AuthenticateSession) AuthSession(ctx context.Context, token string) (*auth.Session, error) {
	ret := _m.Called(ctx, token)

	var r0 *auth.Session
	if rf, ok := ret.Get(0).(func(context.Context, string) *auth.Session); ok {
		r0 = rf(ctx, token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAuthenticateSession interface {
	mock.TestingT
	Cleanup(func())
}

// NewAuthenticateSession creates a new instance of AuthenticateSession. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthenticateSession(t mockConstructorTestingTNewAuthenticateSession) *AuthenticateSession {
	mock := &AuthenticateSession{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

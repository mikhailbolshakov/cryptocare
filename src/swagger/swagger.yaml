basePath: /api
definitions:
  http.Bid:
    properties:
      available:
        description: Available - available volume
        type: number
      exchangeCode:
        description: ExchangeCode - exchange code
        type: string
      id:
        description: Id
        type: string
      link:
        description: Link - link to the bid on the exchange
        type: string
      maxLimit:
        description: MaxLimit - max limit
        type: number
      methods:
        description: Methods - methods
        items:
          type: string
        type: array
      minLimit:
        description: MinLimit - min limit
        type: number
      rate:
        description: Rate - conversion rate
        type: number
      src:
        description: SrcAsset - source asset
        type: string
      trg:
        description: TrgAsset - target asset
        type: string
      type:
        description: Type
        type: string
      userId:
        description: UserId - user who exposes the bid
        type: string
    type: object
  http.BidRequest:
    properties:
      available:
        description: Available available volume
        type: number
      exchangeCode:
        description: ExchangeCode - exchange code
        type: string
      id:
        description: Id
        type: string
      link:
        description: Link - link to the bid
        type: string
      maxLimit:
        description: MaxLimit - max limit
        type: number
      methods:
        description: Methods - methods
        items:
          type: string
        type: array
      minLimit:
        description: MinLimit - minimum limit
        type: number
      rate:
        description: Rate - conversion rate
        type: number
      src:
        description: SrcAsset - source asset
        type: string
      trg:
        description: TrgAsset - target asset
        type: string
      userId:
        description: UserId - user who expose the bid
        type: string
    type: object
  http.ClientRegistrationRequest:
    properties:
      email:
        description: Email - user's email
        type: string
      firstName:
        description: FirstName - user's first name
        type: string
      lastName:
        description: LastName - user's last name
        type: string
      password:
        description: Password - password
        type: string
    type: object
  http.ClientUser:
    properties:
      email:
        description: Email - email
        type: string
      firstName:
        description: FirstName - user's first name
        type: string
      id:
        description: Id - user ID
        type: string
      lastName:
        description: LastName - user's last name
        type: string
    type: object
  http.Error:
    properties:
      code:
        description: Code is error code provided by error producer
        type: string
      details:
        additionalProperties: true
        description: Details is additional info provided by error producer
        type: object
      message:
        description: Message is error description
        type: string
      translationKey:
        description: TranslationKey is error code translation key
        type: string
      type:
        description: Type is error type (panic, system, business)
        type: string
    type: object
  http.LoginRequest:
    properties:
      email:
        description: Email - login
        type: string
      password:
        description: Password - password
        type: string
    type: object
  http.LoginResponse:
    properties:
      token:
        $ref: '#/definitions/http.SessionToken'
        description: Token - auth token must be passed as  "Authorization Bearer"
          header for all the requests (except ones which don't require authorization)
      userId:
        description: UserId - ID of account
        type: string
    type: object
  http.ProfitableChain:
    properties:
      asset:
        description: Asset - the target asset
        type: string
      bidAssets:
        description: BidAssets sequence of asset for each bids like [RUB, USD, USDT]
        items:
          type: string
        type: array
      bids:
        description: Bids sequence of bids
        items:
          $ref: '#/definitions/http.Bid'
        type: array
      createdAt:
        description: CreatedAt - when this chain has been created
        type: string
      depth:
        description: Depth chain depth
        type: integer
      exchangeCodes:
        description: ExchangeCodes through all bids
        items:
          type: string
        type: array
      id:
        description: Id - chain Id, calculated as hash from bidIds
        type: string
      methods:
        description: Methods list of methods (union methods from all bids)
        items:
          type: string
        type: array
      profitShare:
        description: ProfitShare profit share
        type: number
    type: object
  http.ProfitableChains:
    properties:
      chains:
        description: Chains
        items:
          $ref: '#/definitions/http.ProfitableChain'
        type: array
    type: object
  http.SessionToken:
    properties:
      accessToken:
        description: AccessToken
        type: string
      accessTokenExpiresAt:
        description: AccessTokenExpiresAt - when access token expires
        type: string
      refreshToken:
        description: RefreshToken
        type: string
      refreshTokenExpiresAt:
        description: RefreshToken - when refresh token expires
        type: string
      sessionId:
        description: SessionId - session ID
        type: string
    type: object
  http.SetPasswordRequest:
    properties:
      newPassword:
        description: NewPassword - new password
        type: string
      prevPassword:
        description: PrevPassword - current password
        type: string
    type: object
  http.Subscription:
    properties:
      filter:
        $ref: '#/definitions/http.SubscriptionChainFilter'
        description: Filter subscription filter
      id:
        description: Id subscription
        type: string
      isActive:
        description: IsActive if subscription active
        type: boolean
      notifications:
        description: Notifications notifications
        items:
          $ref: '#/definitions/http.SubscriptionNotification'
        type: array
      userId:
        description: UserId owner of the subscription. Might be empty
        type: string
    type: object
  http.SubscriptionChainFilter:
    properties:
      assets:
        description: Assets filters by assets
        items:
          type: string
        type: array
      exchanges:
        description: Exchanges filters by exchange codes
        items:
          type: string
        type: array
      maxDepth:
        description: MaxDepth max depth of chains
        type: integer
      methods:
        description: Methods filters by methods
        items:
          type: string
        type: array
      minProfit:
        description: MinProfit min profit of chains
        type: number
    type: object
  http.SubscriptionNotification:
    properties:
      channel:
        description: Channel notification channel
        type: string
      id:
        description: Id notification id
        type: string
      isActive:
        description: IsActive if notification active
        type: boolean
      telegram:
        $ref: '#/definitions/http.SubscriptionTelegramNotificationDetails'
        description: Telegram telegram details
    type: object
  http.SubscriptionNotificationRequest:
    properties:
      isActive:
        type: boolean
      tgChannel:
        type: integer
    type: object
  http.SubscriptionRequest:
    properties:
      filter:
        $ref: '#/definitions/http.SubscriptionChainFilter'
        description: Filter subscription filter
      notifications:
        description: Notifications notifications
        items:
          $ref: '#/definitions/http.SubscriptionNotificationRequest'
        type: array
    type: object
  http.SubscriptionTelegramNotificationDetails:
    properties:
      channel:
        description: Channel telegram channel
        type: integer
    type: object
  http.Subscriptions:
    properties:
      items:
        items:
          $ref: '#/definitions/http.Subscription'
        type: array
    type: object
info:
  contact:
    email: support@cryptocare.io
    name: Api service support
  description: CryptoCare service allows improving your arbitrage trading experience
  title: CryptoCare API
  version: "1.0"
paths:
  /arbitrage/bids:
    post:
      consumes:
      - application/json
      parameters:
      - description: bid request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.BidRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Bid'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: allows creation or updating an exchange bid
      tags:
      - subscription
  /arbitrage/chains:
    get:
      consumes:
      - application/json
      parameters:
      - description: comma separated list of assets
        in: query
        name: assets
        type: string
      - description: if chains are retrieved with bid info
        in: query
        name: withBids
        type: boolean
      - description: page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.ProfitableChains'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: retrieves profitable deal chains by criteria
      tags:
      - arbitrage
  /arbitrage/chains/{chainId}/details:
    get:
      consumes:
      - application/json
      parameters:
      - description: chain id
        in: path
        name: chainId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.ProfitableChain'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: retrieves profitable deal chain details by id
      tags:
      - arbitrage
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: auth request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/http.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.LoginResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: logins user by email/password
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: logouts user
      tags:
      - auth
  /auth/password:
    post:
      consumes:
      - application/json
      parameters:
      - description: set password request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.SetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: sets a new password for the user
      tags:
      - auth
  /auth/registration:
    post:
      consumes:
      - application/json
      parameters:
      - description: registration request
        in: body
        name: regRequest
        required: true
        schema:
          $ref: '#/definitions/http.ClientRegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.ClientUser'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: registers a new client
      tags:
      - auth
  /auth/token/refresh:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.SessionToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: refreshes auth token
      tags:
      - auth
  /ready:
    get:
      responses:
        "200":
          description: ""
      summary: check system is ready
      tags:
      - system
  /users/{userId}/subscriptions:
    get:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Subscriptions'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: retrieves user's subscriptions
      tags:
      - subscription
    post:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: subscription request
        in: body
        name: regRequest
        required: true
        schema:
          $ref: '#/definitions/http.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Subscription'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: creates a new user subscription
      tags:
      - subscription
  /users/{userId}/subscriptions/{subscriptionId}:
    put:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: user id
        in: path
        name: subscriptionId
        required: true
        type: string
      - description: subscription request
        in: body
        name: regRequest
        required: true
        schema:
          $ref: '#/definitions/http.SubscriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.Subscription'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Error'
      summary: updates a subscription
      tags:
      - subscription
swagger: "2.0"
